name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  buildExstreamerIncoming:
    name: Build Exstreamer Incoming
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: incoming

    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1.4.3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

#      - name: Build and push Docker images
#        uses: docker/build-push-action@v1
#        with:
#          username: _json_key
#          password: ${{ secrets.CONTAINER_REGISTRY_SERVICE_ACCOUNT_CREDENTIALS }}
#          path: incoming
#          dockerfile: incoming/Dockerfile
#          registry: gcr.io
#          repository: stoked-reality-284921/extreamer-incoming
#          build_args: GCLOUD_AUTH=${{ secrets.DEFAULT_SERVICE_ACCOUNT_CREDENTIALS }}
#          tag_with_sha: true

      - name: Install Kubectl
        uses: actions-hub/gcloud@307.0.0
        env:
         PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
         APPLICATION_CREDENTIALS: ${{secrets.GCLOUD_CREDENTIALS}}
        with:
         args: components install kubectl

#  buildManageStreamer:
#    name: Build manage-streamer
#    runs-on: ubuntu-latest
#
#    defaults:
#      run:
#        working-directory: manager
#
#    strategy:
#      matrix:
#        node-version: [12.x]
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Use Node.js ${{ matrix.node-version }}
#      uses: actions/setup-node@v1.4.3
#      with:
#        node-version: ${{ matrix.node-version }}
#    - run: npm ci
#    - run: npm run build --if-present
#    - run: npm test
#
#  deployManageStreamer:
#    name: Deploy manage-streamer
#    runs-on: ubuntu-latest
#    needs: [buildManageStreamer]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Create variables.yaml
#        uses: microsoft/variable-substitution@v1
#        with:
#          files: 'manager/variables.yaml'
#        env:
#          EXAUTH: ${{ secrets.EXAUTH }}
#          EXRTMP: ${{ secrets.EXRTMP }}
#          EXSTREAMER: ${{ secrets.EXSTREAMER }}
#
#      - name: Deploy to GCP
#        uses: actions-hub/gcloud@307.0.0
#        env:
#         PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
#         APPLICATION_CREDENTIALS: ${{secrets.GCLOUD_CREDENTIALS}}
#        with:
#         args: functions deploy manage-streamer --region europe-west2  --runtime nodejs12 --source manager --entry-point manage --env-vars-file manager/variables.yaml --trigger-topic ex-streamer --retry
